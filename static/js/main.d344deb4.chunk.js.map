{"version":3,"sources":["components/pages-css/Mainpage.jsx","components/reusables-css/ContactMeForm.jsx","components/reusables-css/Navbar.jsx","components/reusables/Navbar.jsx","components/reusables-css/AboutMeCard.jsx","assets/imgs/DSC09324.jpg","components/reusables/AboutMeCard.jsx","components/pages/Mainpage.jsx","App.js","reportWebVitals.js","index.js"],"names":["MainpageStyle","styled","div","button","TaglineStyle","NavLinkStyle","Navigationbar","useState","collapsed","setCollapsed","Navbar","fixed","className","NavbarBrand","href","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","BaseCard","ProfilePic","img","AboutMe","HeaderText","h1","Text","p","SocialIcons","AboutMeCard","src","olanrewaju","alt","icon","faLinkedin","size","faGithub","faDribbble","spin","Mainpage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAEaA,EAAgBC,IAAOC,IAAV,6M,6DCADD,IAAOC,IAAV,wWAkBQD,IAAOC,IAAV,0DAIAD,IAAOE,OAAV,gmB,sECtBXC,EAAeH,IAAOC,IAAV,kXAmBZG,EAAeJ,IAAOC,IAAV,yHC+BVI,G,MA5CO,WAElB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAIA,OACI,8BACI,eAACC,EAAA,EAAD,CACIC,MAAM,MACNC,UAAU,cAFd,UAII,cAACC,EAAA,EAAD,CAAaC,KAAK,wBAAwBF,UAAU,UAApD,SACI,eAACR,EAAD,yDAC+C,0DAInD,cAACW,EAAA,EAAD,CAAeC,QAdN,kBAAMP,GAAcD,IAcSI,UAAU,4BAEhD,cAACK,EAAA,EAAD,CAAUC,QAASV,EAAWW,QAAM,EAApC,SACI,eAACC,EAAA,EAAD,CAAKD,QAAM,EAAX,UACI,cAACE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASR,KAAK,wBAAd,SACI,cAACT,EAAD,yBAMR,cAACgB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAASR,KAAK,wBAAd,SACI,cAACT,EAAD,sCCtCnBkB,EAAWtB,IAAOC,IAAV,kRAaRsB,EAAavB,IAAOwB,IAAV,4OAWVC,EAAUzB,IAAOC,IAAV,2LAUPyB,EAAa1B,IAAO2B,GAAV,sWAgBVC,EAAO5B,IAAO6B,EAAV,4IAOJC,EAAc9B,IAAOC,IAAV,yKC3DT,MAA0B,qC,gBCwD1B8B,EAzCK,WAChB,OACI,eAACT,EAAD,WACI,cAACC,EAAD,CAAYS,IAAKC,EAAYC,IAAI,eAEjC,eAACT,EAAD,WACI,eAACC,EAAD,gCACsB,uBAAK,mEAG3B,cAACE,EAAD,qtBAWA,eAACE,EAAD,WACI,mBAAGjB,KAAK,mEAAR,SACI,cAAC,IAAD,CAAiBsB,KAAMC,IAAYC,KAAM,SAG7C,yBACA,mBAAGxB,KAAK,iDAAR,SACI,cAAC,IAAD,CAAiBsB,KAAMG,IAAUD,KAAM,SAG3C,yBACA,mBAAGxB,KAAK,yCAAR,SACI,cAAC,IAAD,CAAiBsB,KAAMI,IAAYF,KAAM,KAAMG,MAAI,gBChC5DC,EAXE,WAEb,OACI,eAAC1C,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,QCUG2C,EAZH,WACV,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAAC,EAAD,WCDKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d344deb4.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MainpageStyle = styled.div`\n    height: 100vh;\n    width: auto;\n    padding-top: 27vh;\n    margin-left: 7%;\n    margin-right: 7%;\n\n    @media (max-width: 425px) {\n        padding-top: 14vh;\n    }\n`","import styled from \"@emotion/styled\";\n\nexport const FormStyle = styled.div`\n    text-align: left;\n    width: 750px;\n    padding: 1em;\n    border: 1px solid #d3d3d3;\n    border-radius: .4em;\n    margin-top: auto;\n    margin-bottom: auto;\n    margin-left: auto;\n    margin-right: auto;\n\n    background-color: rgba(255, 255, 255, 0.1);\n\n    @media (max-width: 425px) {\n        width: auto;\n    }\n`;\n\nexport const InnerFormStyle = styled.div`\n    padding: 1em !important;\n`;\n\nexport const ButtonStyle = styled.button`\n    display: block;\n    width: 100%;\n    border-radius: .25rem;\n    background: #007bff;\n    padding: .375rem .75rem;\n    font-weight: 400;\n    text-align: center;\n    border: none;\n    color: #fff;\n    -webkit-transition: background .15s ease-out;\n    -moz-transition: background .15s ease-out;\n    -o-transition: background .15s ease-out;\n    transition: background .15s ease-out;\n    &:hover {\n        background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%);\n        cursor: pointer;\n        opacity: 70%;\n        }\n`;","import styled from '@emotion/styled';\n\nexport const TaglineStyle = styled.div`\n    font-weight: bold;\n    font-size: 22px;\n    color: #f7fbff;\n    font-family: 'Noto Sans Mono', monospace;\n    span {display: none;}\n    &:hover {\n        span {\n            display: initial;\n            color: black;\n        }\n        cursor: pointer;\n    }\n\n    @media (max-width: 425px) {\n        font-size: 13px;\n    }\n`;\n\nexport const NavLinkStyle = styled.div`\n    font-weight: bold;\n    font-size: 20px;\n    font-family: 'Noto Sans Mono', monospace;\n`;","// core imports\nimport React, { useState } from 'react';\n\n// styling imports\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport { TaglineStyle, NavLinkStyle } from '../reusables-css/Navbar';\nimport '../reusables-css/Navbar.css'\n\nconst Navigationbar = () => {\n\n    const [collapsed, setCollapsed] = useState(true);\n\n    const toggleNavbar = () => setCollapsed(!collapsed);\n\n    return (\n        <div>\n            <Navbar\n                fixed=\"top\"\n                className=\"navbarStyle\"\n            >\n                <NavbarBrand href=\"http://localhost:3000\" className=\"mr-auto\">\n                    <TaglineStyle>\n                        0lanr3w4ju: Lag05 based Fullstack Developer<span> / Ethical Hacker</span>\n                    </TaglineStyle>\n                </NavbarBrand>\n\n                <NavbarToggler onClick={toggleNavbar} className=\"mr-2 navbarTogglerStyle\" />\n\n                <Collapse isOpen={!collapsed} navbar>\n                    <Nav navbar>\n                        <NavItem>\n                            <NavLink href=\"http://localhost:3000\">\n                                <NavLinkStyle>\n                                    Github\n                                </NavLinkStyle>\n                            </NavLink>\n                        </NavItem>\n\n                        <NavItem>\n                            <NavLink href=\"http://localhost:3000\">\n                                <NavLinkStyle>\n                                    Dribble\n                                </NavLinkStyle>\n                            </NavLink>\n                        </NavItem>\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default Navigationbar\n\n","import styled from '@emotion/styled';\n\nexport const BaseCard = styled.div`\n    margin-top: auto;\n    margin-bottom: auto;\n    margin-left: auto;\n    margin-right: auto;\n    background-color: rgba(255, 255, 255, 0.1);\n    width: 80%;\n    height: 80%;\n    display: flex;\n    z-index: 0;\n    border-radius: 0.9em;\n`;\n\nexport const ProfilePic = styled.img`\n    width: 38%;\n    height: 94%;\n    border-radius: 0.9em;\n    z-index: 1;\n    margin-top: 80px;\n    margin-left: 80px;\n    filter: grayscale(90%) brightness(150%);\n    box-shadow: 0 12px 41px black;\n`;\n\nexport const AboutMe = styled.div`\n    width: 38%;\n    height: 94%;\n    background-color: transparent;\n    z-index: 1;\n    margin-top: 80px;\n    margin-left: 80px;\n    align-items: left;\n`;\n\nexport const HeaderText = styled.h1`\n    font-family: 'Noto Sans Mono, monospace';\n    font-weight: bold;\n    font-size: 45px;\n    color: powderblue;\n    filter: opacity(81%);\n    border-top: 2px solid bisque;\n    padding-top: 20px;\n    padding-bottom: 12px;\n    span {\n        font-size: 21px;\n        color: bisque;\n        filter: opacity(81%);\n    }\n`;\n\nexport const Text = styled.p`\n  font-size: 18px;\n  color: powderblue;\n  font-family: 'Noto Sans Mono, monospace';\n  filter: opacity(81%);\n`;\n\nexport const SocialIcons = styled.div`\n    display: flex;\n    span {\n        padding-right: 30px;\n    };\n    a {\n        color: bisque;\n        filter: opacity(81%);\n    }\n`;","export default __webpack_public_path__ + \"static/media/DSC09324.c651f0f2.jpg\";","// styling imports\nimport {\n    BaseCard,\n    ProfilePic,\n    AboutMe,\n    HeaderText,\n    Text,\n    SocialIcons\n} from '../reusables-css/AboutMeCard';\nimport olanrewaju from '../../assets/imgs/DSC09324.jpg';\n\n// icons imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faGithub, faDribbble } from '@fortawesome/free-brands-svg-icons';\n\nconst AboutMeCard = () => {\n    return (\n        <BaseCard>\n            <ProfilePic src={olanrewaju} alt=\"olanrewaju\"></ProfilePic>\n\n            <AboutMe>\n                <HeaderText>\n                    Alawode Olanrewaju<br/><span>Software Engineer / Designer</span>\n                </HeaderText>\n\n                <Text>\n                    I am an enthusiastic and a nonstop learner, that's what I consider life to be all about, I am also a lover of\n                    chess. I think fast and random when it is time to brainstorm or be creative, I love asking people\n                    questions, especially questions that leads to discussions about solution processes people would\n                    imagine was available to get a task done because their answers help give me a human-centered\n                    software design perspective, which aids into development. This attribute have made me a better and\n                    faster developer of quality and working codes. I currently know how to use Django, react, and spring boot\n                    web development frameworks comfortably and am conversant with various software testing techniques\n                    and tools.\n                </Text>\n                \n                <SocialIcons>\n                    <a href=\"https://www.linkedin.com/in/olanrewaju-samuel-alawode-05374516b/\">\n                        <FontAwesomeIcon icon={faLinkedin} size={'lg'} />\n                    </a>\n                    \n                    <span></span>\n                    <a href=\"https://github.com/0lanr3w4ju?tab=repositories\">\n                        <FontAwesomeIcon icon={faGithub} size={'lg'} />\n                    </a>\n\n                    <span></span>\n                    <a href=\"https://dribbble.com/OlanrewajuDribble\">\n                        <FontAwesomeIcon icon={faDribbble} size={'lg'} spin />\n                    </a>\n                </SocialIcons>\n            </AboutMe>\n        </BaseCard>\n    )\n}\n\nexport default AboutMeCard;","import { MainpageStyle } from '../pages-css/Mainpage';\nimport ContactMeForm from '../reusables/ContactMeForm';\nimport Navigationbar from '../reusables/Navbar';\nimport AboutMeCard from '../reusables/AboutMeCard';\n\nconst Mainpage = () => {\n\n    return (\n        <MainpageStyle>\n            <Navigationbar />\n            <AboutMeCard />\n            {/* <ContactMeForm /> */}\n        </MainpageStyle>\n    )\n}\n\nexport default Mainpage;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Mainpage from './components/pages/Mainpage';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Mainpage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}